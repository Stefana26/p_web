/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface RatingDTO
 */
export interface RatingDTO {
    /**
     * 
     * @type {string}
     * @memberof RatingDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof RatingDTO
     */
    bookId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof RatingDTO
     */
    value?: number;
    /**
     * 
     * @type {string}
     * @memberof RatingDTO
     */
    userId?: string | null;
    /**
     * 
     * @type {User}
     * @memberof RatingDTO
     */
    user?: User;
}

/**
 * Check if a given object implements the RatingDTO interface.
 */
export function instanceOfRatingDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatingDTOFromJSON(json: any): RatingDTO {
    return RatingDTOFromJSONTyped(json, false);
}

export function RatingDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatingDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'bookId': !exists(json, 'bookId') ? undefined : json['bookId'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function RatingDTOToJSON(value?: RatingDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'bookId': value.bookId,
        'value': value.value,
        'userId': value.userId,
        'user': UserToJSON(value.user),
    };
}

