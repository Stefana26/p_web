/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BookDTO } from './BookDTO';
import {
    BookDTOFromJSON,
    BookDTOFromJSONTyped,
    BookDTOToJSON,
} from './BookDTO';

/**
 * 
 * @export
 * @interface GenreDTO
 */
export interface GenreDTO {
    /**
     * 
     * @type {string}
     * @memberof GenreDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof GenreDTO
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GenreDTO
     */
    description?: string | null;
    /**
     * 
     * @type {Array<BookDTO>}
     * @memberof GenreDTO
     */
    books?: Array<BookDTO> | null;
}

/**
 * Check if a given object implements the GenreDTO interface.
 */
export function instanceOfGenreDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GenreDTOFromJSON(json: any): GenreDTO {
    return GenreDTOFromJSONTyped(json, false);
}

export function GenreDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenreDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'books': !exists(json, 'books') ? undefined : (json['books'] === null ? null : (json['books'] as Array<any>).map(BookDTOFromJSON)),
    };
}

export function GenreDTOToJSON(value?: GenreDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'books': value.books === undefined ? undefined : (value.books === null ? null : (value.books as Array<any>).map(BookDTOToJSON)),
    };
}

